"""
Module report: fungsi untuk membuat laporan markdown & html.
"""
import os

def build_markdown_report(records, title="# Rekap Nilai Mahasiswa"):
    """
    records: list of dict dengan kunci: nim, nama, hadir, nilai_akhir, predikat
    Kembalikan string markdown dengan tabel.
    """
    lines = [title, "", "| NIM | Nama | Hadir (%) | Nilai Akhir | Predikat |", "|---|---|---:|---:|:---:|"]
    for r in records:
        lines.append(f"| {r['nim']} | {r['nama']} | {r['hadir']:.1f} | {r['nilai_akhir']:.2f} | {r['predikat']} |")
    lines.append("")
    lines.append("Generated by student_performance_tracker")
    return "\n".join(lines)

def save_text(path, content):
    """Simpan content ke path (overwrite)."""
    os.makedirs(os.path.dirname(path), exist_ok=True)
    with open(path, "w", encoding="utf-8") as f:
        f.write(content)

def export_html(records, path, title="Rekap Nilai Mahasiswa"):
    """
    Export HTML sederhana. Warna baris berdasarkan predikat:
      A: #d4edda (hijau muda)
      B: #fff3cd (kuning muda)
      C: #ffe5b4 (oranye muda)
      D: #f8d7da (pink)
      E: #f5c6cb (merah muda)
    """
    palette = {"A": "#d4edda", "B": "#fff3cd", "C": "#ffe5b4", "D": "#f8d7da", "E": "#f5c6cb"}
    rows = []
    for r in records:
        color = palette.get(r['predikat'], "#ffffff")
        rows.append(f"<tr style='background:{color}'><td>{r['nim']}</td><td>{r['nama']}</td><td style='text-align:right'>{r['hadir']:.1f}</td><td style='text-align:right'>{r['nilai_akhir']:.2f}</td><td style='text-align:center'>{r['predikat']}</td></tr>")
    html = f"""<!doctype html>
<html>
<head>
<meta charset="utf-8"/>
<title>{title}</title>
<style>
  table{{border-collapse:collapse;width:100%;}}
  td,th{{border:1px solid #ccc;padding:8px;text-align:left}}
  th{{background:#f2f2f2}}
</style>
</head>
<body>
<h2>{title}</h2>
<table>
<thead><tr><th>NIM</th><th>Nama</th><th>Hadir (%)</th><th>Nilai Akhir</th><th>Predikat</th></tr></thead>
<tbody>
{''.join(rows)}
</tbody>
</table>
<p>Generated by student_performance_tracker</p>
</body>
</html>
"""
    os.makedirs(os.path.dirname(path), exist_ok=True)
    with open(path, "w", encoding="utf-8") as f:
        f.write(html)
